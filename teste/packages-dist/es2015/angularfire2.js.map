{"version":3,"file":"angularfire2.js","sourceRoot":"","sources":["../../../src/core/angularfire2.ts"],"names":[],"mappings":"AAAA,OAAO,yBAAyB,CAAC;AAEjC,OAAO,EAAC,gBAAgB,EAAC,MAAM,iBAAiB,CAAC;AACjD,OAAO,EAAC,cAAc,EAAS,MAAM,eAAe,CAAC;AAGrD,OAAO,EAAC,UAAU,EAAC,MAAM,iBAAiB,CAAC;AAE3C,OAAO,EAAC,KAAK,EAAC,MAAM,sBAAsB,CAAC;AAI3C,MAAM,CAAC,MAAM,eAAe,GACxB,IAAI,cAAc,CAAS,sBAAsB,CAAC,CAAC;AACvD,MAAM,CAAC,MAAM,iBAAiB,GAC1B,IAAI,cAAc,CAAkB,qBAAqB,CAAC,CAAC;AAG/D,MAAM,CAAC,MAAM,mBAAmB,GAC5B,IAAI,cAAc,CAAS,kCAAkC,CAAC,CAAC;AAEnE,MAAM;IACJ,YAAmB,IAAY,EAAU,UAAkB;QAAxC,SAAI,GAAJ,IAAI,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAQ;KAAI;IAC/D,QAAQ,CAAC,GAAG,IAAW;QACrB,MAAM,CAAe,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;YACxC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;SACzC,CAAC,CAAC;KACJ;IAED,sBAAsB,CAAI,IAAmB;QAC3C,EAAE,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,UAAU,CAAI,UAAU;gBACjC,MAAM,IAAI,GAAG,SAAQ,CAAC;gBACtB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CACvC,mBAAmB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,KAAK,EAAE,CAAC,SAAS,CAClB,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBAC5D,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aACnC,CAAC,CAAC;SACJ;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;SACb;KACF;IACD,iBAAiB,CAAI,IAAmB;QACtC,MAAM,CAAC,IAAI,UAAU,CAAI,UAAU;YACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,SAAS,CACjB,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EACpD,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EACrD,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,UAAU,CAAC,QAAQ,EAAE,CAAC,CACnD,CAAC;aACH,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;CACF","sourcesContent":["import 'rxjs/add/operator/first';\n\nimport {isPlatformServer} from '@angular/common';\nimport {InjectionToken, NgZone} from '@angular/core';\nimport firebase from '@firebase/app';\nimport {FirebaseApp, FirebaseOptions} from '@firebase/app-types';\nimport {Observable} from 'rxjs/Observable';\nimport {observeOn} from 'rxjs/operator/observeOn';\nimport {queue} from 'rxjs/scheduler/queue';\nimport {Subscription} from 'rxjs/Subscription';\nimport {} from 'zone.js';\n\nexport const FirebaseAppName =\n    new InjectionToken<string>('angularfire2.appName');\nexport const FirebaseAppConfig =\n    new InjectionToken<FirebaseOptions>('angularfire2.config');\n\n// Put in database.ts when we drop database-depreciated\nexport const RealtimeDatabaseURL =\n    new InjectionToken<string>('angularfire2.realtimeDatabaseURL');\n\nexport class FirebaseZoneScheduler {\n  constructor(public zone: NgZone, private platformId: Object) {}\n  schedule(...args: any[]): Subscription {\n    return <Subscription>this.zone.runGuarded(function() {\n      return queue.schedule.apply(queue, args)\n    });\n  }\n  // TODO this is a hack, clean it up\n  keepUnstableUntilFirst<T>(obs$: Observable<T>) {\n    if (isPlatformServer(this.platformId)) {\n      return new Observable<T>(subscriber => {\n        const noop = () => {};\n        const task = Zone.current.scheduleMacroTask(\n            'firebaseZoneBlock', noop, {}, noop, noop);\n        obs$.first().subscribe(\n            () => this.zone.runOutsideAngular(() => task.invoke()));\n        return obs$.subscribe(subscriber);\n      });\n    } else {\n      return obs$;\n    }\n  }\n  runOutsideAngular<T>(obs$: Observable<T>): Observable<T> {\n    return new Observable<T>(subscriber => {\n      return this.zone.runOutsideAngular(() => {\n        return obs$.subscribe(\n            value => this.zone.run(() => subscriber.next(value)),\n            error => this.zone.run(() => subscriber.error(error)),\n            () => this.zone.run(() => subscriber.complete()),\n        );\n      });\n    });\n  }\n}\n"]}